# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v1
      
      # Runs a single command using the runners shell
      - name: Run a one-line script
        run :  git diff --name-only --diff-filter=AM -- ${{ github.event.before }} -- ${{ github.sha }}

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          sh execute.sh


      - name: get changed files
        id: getfile
        run: |
          echo "::set-output name=files::$(git diff --color ${{ github.event.before }} ${{ github.sha }})"

      - name: echo output
        run: |
          echo ${{ steps.getfile.outputs.files }}
          
      # Checkout the source code
      - name: Checkout source code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      # Check for changes
      - name: Check for changes
        id: checkForChanges
        run: |
          echo "::set-output name=grepValue::$( git diff --name-only ${{ github.event.before }} ${{ github.sha }} | grep -c '^proxy' )"
    
      - name: echo output1
        run: |
          echo ${{ steps.checkForChanges.outputs.grepValue }}
          
      - uses: actions/checkout@v2
      - name: Check for changes
        id: diff
        run: |
          if [ $GITHUB_BASE_REF ]; then
            # Pull Request
            git fetch origin $GITHUB_BASE_REF --depth=1
            export DIFF=$( git diff --name-only origin/$GITHUB_BASE_REF $GITHUB_SHA )
            echo "Diff between origin/$GITHUB_BASE_REF and $GITHUB_SHA"
          else
            # Push
            git fetch origin ${{ github.event.before }} --depth=1
            export DIFF=$( git diff --name-only ${{ github.event.before }} $GITHUB_SHA )
            echo "Diff between ${{ github.event.before }} and $GITHUB_SHA"
          fi
          echo "$DIFF"
          # Escape newlines (replace \n with %0A)
          echo "::set-output name=diff::$( echo "$DIFF" | sed ':a;N;$!ba;s/\n/%0A/g' )"
      - run: echo "${{ steps.diff.outputs.diff }}"
     
